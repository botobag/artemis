#
# Copyright (c) 2018, The Artemis Authors.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

version: 2

# Build steps for Go pre-1.10 which misses feature such as strings.Builder.
test_pre_go_1_10: &test_pre_go_1_10
  working_directory: /go/src/github.com/botobag/artemis
  steps:
    - checkout
    - run: go get -v -t -d ./...
    - run: go test ./...
      # We need to specify -unsafeptr to bypass the tricky unsafe.Pointer in
      # internal/util/string_builder_compat.go.
    - run: go tool vet -unsafeptr=false .

# Build steps for Go pre-1.11 which doesn't have Go modules.
test_pre_go_1_11: &test_pre_go_1_11
  working_directory: /go/src/github.com/botobag/artemis
  steps:
    - checkout
    - run: go get -v -t -d ./...
    - run: go test ./...
    - run: go vet ./...

test_go_latest: &test_go_latest
  steps:
    - checkout
    - run: go test ./...
    - run: go vet ./...

defaults: &defaults
  <<: *test_go_latest

jobs:
  Go 1.9:
    docker: [{ image: 'circleci/golang:1.9' }]
    <<: *test_pre_go_1_10

  Go 1.10:
    docker: [{ image: 'circleci/golang:1.10' }]
    <<: *test_pre_go_1_11

  Go 1.11:
    docker: [{ image: 'circleci/golang:1.11' }]
    <<: *defaults

  Go latest:
    docker: [{ image: 'circleci/golang:latest' }]
    <<: *defaults

  codecov:
    docker: [{ image: 'circleci/golang:1.11' }]
    steps:
      - checkout
      # See:
      #   - https://www.ory.sh/golang-go-code-coverage-accurate/
      #   - https://github.com/botobag/artemis/issues/43
      #
      # Commands from https://github.com/ory/go-acc
      - run: "touch ./coverage.tmp"
      - run: >-
          echo 'mode: atomic' > coverage.txt
      - run: >-
          go list ./... | grep -v /cmd | grep -v /vendor | xargs
          -n1 -I{}
          sh -c 'go test -race -covermode=atomic -coverprofile=coverage.tmp -coverpkg $(go list ./... | grep -v /vendor | tr "\n" ",") {} && tail -n +2 coverage.tmp >> coverage.txt || exit 255'
      - run: "rm coverage.tmp"
      - run: "bash <(curl -s https://codecov.io/bash)"

workflows:
  version: 2
  build:
    jobs:
      - Go 1.9
      - Go 1.10
      - Go 1.11
      - Go latest
      - codecov
